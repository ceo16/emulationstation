# version format
version: '{build}'

# Maximum number of concurrent jobs for the project
max_jobs: 1

# Build worker image (VM template)
image: Visual Studio 2019

# clone directory
clone_folder: c:\src\EmulationStation

branches:
  only:
    - master
    - stable
  except:
    - continuous-master
    - continuous-stable
    
environment:
  _LINK_: /FORCE:MULTIPLE

build_script:
 - cd c:\src\EmulationStation
  - echo "Contenuto del file .gitmodules:"
  - if exist .gitmodules (type .gitmodules) else (echo ".gitmodules NON ESISTE o non e' in questa directory") # Verifica .gitmodules
  - git submodule update --init --recursive --force # Usiamo --force per sicurezza
  - echo "Comando git submodule update completato. Codice di uscita: %errorlevel%" # Mostra il codice di uscita di git submodule
  - echo "Verifico lo stato dei sottomoduli:"
  - git submodule status --recursive 
  - echo "Contenuto della cartella 'c:\src\EmulationStation\external' DOPO submodule update:"
  - dir c:\src\EmulationStation\external
  - echo "Verifico l'esistenza della cartella 'c:\src\EmulationStation\external\pugixml':"
  - if exist c:\src\EmulationStation\external\pugixml (echo "Cartella pugixml ESISTE.") else (echo "Cartella pugixml NON ESISTE.")
  - echo "Contenuto della cartella 'c:\src\EmulationStation\external\pugixml' (se esiste):"
  - if exist c:\src\EmulationStation\external\pugixml (dir c:\src\EmulationStation\external\pugixml)
  - mkdir build
  - cd build
  - cmake -G "Visual Studio 16 2019" -T v142 .. -DCMAKE_GENERATOR_PLATFORM=Win32 -DRETROBAT=1 -DSCREENSCRAPER_DEV_LOGIN="devid=ceo16&devpassword=jS2TYbBqkYU" -DGAMESDB_APIKEY="7da2165a59d0df87d0bc611454215184ca6dcf0b24895691a158f9caaf29119c" -DCHEEVOS_DEV_LOGIN="z=ceo16&y=4pxVzi8i41XCSgfrmm3NnxjWF6bmEqs0" -DHFS_DEV_LOGIN="Retrobat:nJuHagHR8NkEz96"
  - '"C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin\MSBuild" emulationstation-all.sln /p:Configuration=Release /p:Platform="Win32"'
  - cd c:\src\EmulationStation
  - IF EXIST locale\lang ( xcopy locale\lang resources\locale /S /Y /I )
  - ps: |
      $version = [System.Diagnostics.FileVersionInfo]::GetVersionInfo("C:\src\EmulationStation\bin\win32\Release\emulationstation.exe").FileVersion -replace ',','.';
      $timestamp = Get-Date -Format "yyyymmddHHmm"
      Update-AppveyorBuild -Version "$version-$timestamp"  
      "$version-$timestamp" | Out-File c:\src\EmulationStation\version.info -Encoding ASCII
  - 7z a EmulationStation-Win32.zip C:\src\EmulationStation\bin\win32\Release\*.exe C:\src\EmulationStation\bin\win32\Release\*.exp
  - 7z a EmulationStation-Win32.zip C:\src\EmulationStation\win32-libs\libvlc\x86\libvlc.dll C:\src\EmulationStation\win32-libs\libvlc\x86\libvlccore.dll C:\src\EmulationStation\win32-libs\libvlc\x86\plugins
  - 7z a EmulationStation-Win32.zip C:\src\EmulationStation\win32-libs\SDL2_mixer\x86\*.dll C:\src\EmulationStation\win32-libs\SDL2_mixer\x86\optional\*.dll
  - 7z a EmulationStation-Win32.zip C:\src\EmulationStation\win32-libs\SDL2\x86\SDL2.dll
  - 7z a EmulationStation-Win32.zip C:\src\EmulationStation\win32-libs\curl\x86\bin\libcurl.dll
  - 7z a EmulationStation-Win32.zip C:\src\EmulationStation\win32-libs\FreeImage\x86\FreeImage.dll
  - 7z a EmulationStation-Win32.zip C:\src\EmulationStation\external\webview2sdk\build\x86\WebView2Loader.dll
  - 7z a EmulationStation-Win32.zip C:\src\EmulationStation\resources
  - 7z a EmulationStation-Win32.zip C:\src\EmulationStation\version.info

  - 7z a EmulationStation-Win32-no-deps.zip C:\src\EmulationStation\bin\win32\Release\*.exe C:\src\EmulationStation\bin\win32\Release\*.exp
  - 7z a EmulationStation-Win32-no-deps.zip C:\src\EmulationStation\resources
  - 7z a EmulationStation-Win32-no-deps.zip C:\src\EmulationStation\version.info

artifacts:
- path: '*.zip'
  name: GitHub
- path: version.info
  name: GitHub

deploy:
- provider: GitHub
  tag: continuous
  release: continuous
  auth_token:
    secure: j2wYgDHRlxXaLB8MjsM3l2T+KlBA441m1r9g5cdo6nNh36f7w+iRlUv6eDtNB332
